# Generated by Django 5.1.4 on 2025-01-10 16:34

import django.db.models.deletion
import full_cost.constants.entities
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('lab', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='historicalgroup',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical group', 'verbose_name_plural': 'historical groups'},
        ),
        migrations.AlterModelOptions(
            name='historicalproject',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical project', 'verbose_name_plural': 'historical projects'},
        ),
        migrations.AlterModelOptions(
            name='historicaluser',
            options={'get_latest_by': ('history_date', 'history_id'), 'ordering': ('-history_date', '-history_id'), 'verbose_name': 'historical user', 'verbose_name_plural': 'historical users'},
        ),
        migrations.RemoveField(
            model_name='historicalproject',
            name='gestionnaire',
        ),
        migrations.RemoveField(
            model_name='historicalproject',
            name='pricing',
        ),
        migrations.RemoveField(
            model_name='project',
            name='gestionnaire',
        ),
        migrations.RemoveField(
            model_name='project',
            name='pricing',
        ),
        migrations.AddField(
            model_name='extraction',
            name='submitted',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='group',
            name='gestionnaire',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.gestionnaire'),
        ),
        migrations.AddField(
            model_name='historicalgroup',
            name='gestionnaire',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab.gestionnaire'),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='is_academic',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='is_cnrs',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='is_national',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='project',
            name='is_academic',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='project',
            name='is_cnrs',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='project',
            name='is_national',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='extraction',
            name='billing',
            field=models.CharField(choices=[('MET_C', 'Conventionnal TEM'), ('MET_A', 'Advanced TEM'), ('PREPA', 'Preparation for MET and MEB'), ('PREPA_SOFT', 'Soft Matter Preparation'), ('FIB_MEB', 'FIB Preparation and MEB'), ('SPECTRO', 'Optical Spectroscopy'), ('SPECTRO_CHEMISTRY', 'Optical Spectroscopy for Chemistry'), ('MAGNET', 'Magnetic Properties'), ('MATC', 'Material Caracterisation'), ('CLEANR', 'Clean Room Processes'), ('NEARF', 'Near-field microscopy'), ('FIB_LITHO', 'Lithography using the ZEISS'), ('CHEMISTRY', 'Chemistry'), ('GROWTH', 'Growth'), ('IMPLANT', 'Ionic Implantation'), ('UHVI', 'UHV Imagery'), ('DUFG', 'Growth DUF'), ('LT4P', 'LT-UHV 4 tips'), ('MECA', 'Mechanic Service'), ('ELEC', 'Electronic Service')], default=('MET_C', 'Conventionnal TEM'), max_length=200),
        ),
        migrations.AlterField(
            model_name='extraction',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='gestionnaire',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='group',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='historicalgroup',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='historicalgroup',
            name='id',
            field=models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='historicalproject',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='historicalproject',
            name='id',
            field=models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='historicalproject',
            name='project_pi',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab.user'),
        ),
        migrations.AlterField(
            model_name='historicaluser',
            name='history_date',
            field=models.DateTimeField(db_index=True),
        ),
        migrations.AlterField(
            model_name='historicaluser',
            name='id',
            field=models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='price',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='price',
            name='price_category',
            field=models.CharField(choices=[('T1', 'CNRS Interne'), ('T2', 'CNRS Externe'), ('T3', 'Private')], default=full_cost.constants.entities.PriceCategory['T1'], max_length=200),
        ),
        migrations.AlterField(
            model_name='price',
            name='price_entity',
            field=models.CharField(choices=[('MET_C', 'Conventionnal TEM'), ('MET_A', 'Advanced TEM'), ('PREPA', 'Preparation for MET and MEB'), ('PREPA_SOFT', 'Soft Matter Preparation'), ('FIB_MEB', 'FIB Preparation and MEB'), ('SPECTRO', 'Optical Spectroscopy'), ('SPECTRO_CHEMISTRY', 'Optical Spectroscopy for Chemistry'), ('MAGNET', 'Magnetic Properties'), ('MATC', 'Material Caracterisation'), ('CLEANR', 'Clean Room Processes'), ('NEARF', 'Near-field microscopy'), ('FIB_LITHO', 'Lithography using the ZEISS'), ('CHEMISTRY', 'Chemistry'), ('GROWTH', 'Growth'), ('IMPLANT', 'Ionic Implantation'), ('UHVI', 'UHV Imagery'), ('DUFG', 'Growth DUF'), ('LT4P', 'LT-UHV 4 tips'), ('MECA', 'Mechanic Service'), ('ELEC', 'Electronic Service')], default=('MET_C', 'Conventionnal TEM'), max_length=200),
        ),
        migrations.AlterField(
            model_name='project',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='project',
            name='project_pi',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.user'),
        ),
        migrations.AlterField(
            model_name='user',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
    ]
