# Generated by Django 5.1.4 on 2025-02-04 20:29

import django.db.models.deletion
import django.utils.timezone
import fullcoster.constants.entities
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Gestionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default=None, max_length=200)),
                ('last_name', models.CharField(default=None, max_length=200)),
                ('email', models.EmailField(default=None, max_length=200)),
            ],
            options={
                'ordering': ['last_name'],
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_category', models.CharField(choices=[('T1', 'CNRS Interne'), ('T2', 'CNRS Externe'), ('T3', 'Private')], default=fullcoster.constants.entities.PriceCategory['T1'], max_length=200)),
                ('price', models.FloatField(default=0)),
                ('price_name', models.CharField(default='', max_length=200)),
                ('price_entity', models.CharField(choices=[('MET_C', 'Conventionnal TEM'), ('MET_A', 'Advanced TEM'), ('PREPA', 'Preparation for MET and MEB'), ('PREPA_SOFT', 'Soft Matter Preparation'), ('FIB_MEB', 'FIB Preparation and MEB'), ('SPECTRO', 'Optical Spectroscopy'), ('SPECTRO_CHEMISTRY', 'Optical Spectroscopy for Chemistry'), ('MAGNET', 'Magnetic Properties'), ('MATC', 'Material Caracterisation'), ('CLEANR', 'Clean Room Processes'), ('NEARF', 'Near-field microscopy'), ('FIB_LITHO', 'Lithography using the ZEISS'), ('CHEMISTRY', 'Chemistry'), ('GROWTH', 'Growth'), ('IMPLANT', 'Ionic Implantation'), ('UHVI', 'UHV Imagery'), ('DUFG', 'Growth DUF'), ('LT4P', 'LT-UHV 4 tips'), ('MECA', 'Mechanic Service'), ('ELEC', 'Electronic Service')], default=('MET_C', 'Conventionnal TEM'), max_length=200)),
            ],
            options={
                'ordering': ['price_entity', 'price_name', 'price_category'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('is_cnrs', models.BooleanField(default=True)),
                ('is_academic', models.BooleanField(default=True)),
                ('is_national', models.BooleanField(default=True)),
                ('expired', models.BooleanField(default=False)),
                ('expired_date', models.DateField(default=django.utils.timezone.now)),
                ('amount_left', models.FloatField(default=0.0)),
            ],
            options={
                'ordering': ['project_name'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=200)),
                ('gestionnaire', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.gestionnaire')),
            ],
            options={
                'ordering': ['group'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalGroup',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('group', models.CharField(max_length=200)),
                ('description', models.CharField(default='', max_length=200)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('gestionnaire', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab.gestionnaire')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical group',
                'verbose_name_plural': 'historical groups',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalUser',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('user_last_name', models.CharField(max_length=200)),
                ('user_first_name', models.CharField(max_length=200)),
                ('is_left', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('group', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab.group')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical user',
                'verbose_name_plural': 'historical users',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Extraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_after', models.DateField(default=django.utils.timezone.now)),
                ('date_before', models.DateField(default=django.utils.timezone.now)),
                ('creation_date', models.DateField(default=django.utils.timezone.now)),
                ('creation_id', models.IntegerField(default=-1)),
                ('factured', models.BooleanField(default=False)),
                ('amount', models.FloatField(default=0.0)),
                ('billing', models.CharField(choices=[('MET_C', 'Conventionnal TEM'), ('MET_A', 'Advanced TEM'), ('PREPA', 'Preparation for MET and MEB'), ('PREPA_SOFT', 'Soft Matter Preparation'), ('FIB_MEB', 'FIB Preparation and MEB'), ('SPECTRO', 'Optical Spectroscopy'), ('SPECTRO_CHEMISTRY', 'Optical Spectroscopy for Chemistry'), ('MAGNET', 'Magnetic Properties'), ('MATC', 'Material Caracterisation'), ('CLEANR', 'Clean Room Processes'), ('NEARF', 'Near-field microscopy'), ('FIB_LITHO', 'Lithography using the ZEISS'), ('CHEMISTRY', 'Chemistry'), ('GROWTH', 'Growth'), ('IMPLANT', 'Ionic Implantation'), ('UHVI', 'UHV Imagery'), ('DUFG', 'Growth DUF'), ('LT4P', 'LT-UHV 4 tips'), ('MECA', 'Mechanic Service'), ('ELEC', 'Electronic Service')], default=('MET_C', 'Conventionnal TEM'), max_length=200)),
                ('submitted', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lab.project')),
            ],
            options={
                'ordering': ['creation_date', 'creation_id'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_last_name', models.CharField(max_length=200)),
                ('user_first_name', models.CharField(max_length=200)),
                ('is_left', models.BooleanField(default=False)),
                ('group', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.group')),
            ],
            options={
                'ordering': ['user_last_name'],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='project_pi',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lab.user'),
        ),
        migrations.CreateModel(
            name='HistoricalProject',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('is_cnrs', models.BooleanField(default=True)),
                ('is_academic', models.BooleanField(default=True)),
                ('is_national', models.BooleanField(default=True)),
                ('expired', models.BooleanField(default=False)),
                ('expired_date', models.DateField(default=django.utils.timezone.now)),
                ('amount_left', models.FloatField(default=0.0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('project_pi', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lab.user')),
            ],
            options={
                'verbose_name': 'historical project',
                'verbose_name_plural': 'historical projects',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
